---
- summary: |
    Проверка успешной регистрации пользователя с валидными данными
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться
  prerequisites: |
    Зайти на сайт https://codebattle.hexlet.io/ нажать на кнопку "Регистрация"
  test-data: |
    Nickname = от 3 до 16 символов
    Email = актуальный адресс почты
    Password = от 6 до 16 символов
    Password Confirmation = пароли должны совпадать
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка регистрации пользователя с невалидными данными
  requirement: |
    При вводе невалидных данных в форму регистрации, система должна выдать ошибку и подсказу для пользователя
  prerequisites:
    Открыта страница регистарции
  test-data: |
    no data
  steps:
    - В поле  Nickname вводим "QA"
    - В поле Email вводим "mail."
    - В поле Password вводим "123"
    - В поле Password Confirmation вводим "321"
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке и подсказку по каждому полю

- summary: |
    Проверка входа пользователя с существующими электронной почтой и паролем
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    no data
  steps:
    - Ввести существующую почту
    - Ввести акутальный пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка входа пользователя с несуществующими электронной почтой и паролем
  requirement: |
    При вводе невалидных данных в форму авторизации, система должна выдать ошибку и подсказу для пользователя
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    no data
  steps:
    - Ввести несуществующую почту
    - Ввести неакутальный пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке и подсказку по каждому полю

- summary: |
    Проверка авторизации пользователя с помощью Github
  requirement: |
    Пользователь должен иметь возможность авторизоваться с помощью Github
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    Пройдена регистрация и авторизация на Github 
  steps:
    - Нажать на кнопку "Войти в систему с помощью Github"
  expected-result: |
    Пользователь должен попасть на главную страницу и получить уведомление в верхней части экрана "Успешно прошла аутентификацию"

- summary: |
    Проверка авторизации пользователя с помощью Discord
  requirement: |
    Пользователь должен иметь возможность авторизоваться с помощью Discord
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    Пройдена регистрация и авторизация на Discord 
  steps:
    - Нажать на кнопку "Войти в систему с помощью Discord"
  expected-result: |
    Пользователь должен попасть на главную страницу и получить уведомление в верхней части экрана "Успешно прошла аутентификацию"

- summary: |
    Проверка создания игры с ботом
  requirement: |
    Пользователь должен иметь возможность создать игру с ботом
  prerequisites: |
    Авторизованы на сайте 
  test-data: |
    no data 
  steps:
    - Нажать на кнопку - "Create a game"
    - Level - 1 звезда
    - Game Type - With a bot
    - Time control - 29 min
    - Choose task by name or tags - random task
    - Tags - collections, rest
    - Нажать на кнопку - "Create battle"
  expected-result: |
    Должна успешно запуститься игра

- summary: |
    Проверка смены языка программирования во время игры
  requirement: |
    Пользователь должен иметь возможность менять язык программирования во время игры
  prerequisites: |
    Авторзованы на сайте, игра создана, с любыми параметрами
  test-data: |
    no data
  steps:
    - В нижней части экрана сменить чекбокс на любой язык программирования
  expected-result: |
    Интерфейс игры поменяется в соответствии с выбранным языком программирования

- summary: |
    Проверка создания турнира
  requirement: |
    Пользователь должен иметь возможность создать турнир
  prerequisites: |
    Авторзованы на сайте
  test-data: |
    no data
  steps:
    - На главной странице выбираем вкладу "Турниры"
    - Создать турнир
    - Задаем параметры
  expected-result: |
    Турнир успешно создан

- summary: |
    Проверка создания игры с любым пользователем
  requirement: |
    Пользователь должен иметь возможность создать игру с любым пользователем
  prerequisites: |
    Авторзованы на сайте
  test-data: |
    no data
  steps:
    - Нажать на кнопку - "Create a game"
    - Level - 2 звезды
    - Game Type - With other user
    - Time control - 22 min
    - Choose task by name or tags - random task
    - Tags - hash-maps, strings
    - Нажать на кнопку - "Create battle"
    - Нажимаем  - "Продолжить" на главной странице экрана
  expected-result: |
    Игра успешно создана появится уведомление  - "Ждем соперника
Пожалуйста, подождите, пока кто-нибудь присоединится, или отправьте приглашение по ссылке ниже"

- summary: |
    Проверка доступности ссылки на игру другим пользователям
  requirement: |
    Созданная игра пользователем должна быть доступна по ссылке
  prerequisites: |
    Авторзованы на сайте, создана игра с другим пользователем, с любыми параметрами
  test-data: |
    no data
  steps:
    - На главной странице нажимаем на кнопку - "Продолжить"
    - Копируем ссылку на игру
    - Отправляем ссылку другому авторизованному пользователю 
    - Переходим по данной ссылке
    - Нажимаем - join
  expected-result: |
    После перехода по ссылке, появляется уведомление - Присоединяйтесь к игре Игрок...  ждет соперника

- summary: |
    Проверка возможности общения в чате
  requirement: |
    Зарегистрированные пользователи должны иметь возможность общаться в чате
  prerequisites: |
    Авторзованы на сайте
  test-data: |
    no data
  steps:
    - На главной странице спускаемся вниз
    - В поле "чата" вводим любое сообщение
    - Нажимаем - Send
  expected-result: |
    Сообщение успешно отправлено и отображается выше в чате

- summary: |
    Проверка возможности следить за ходом игры
  requirement: |
    Другие пользователи должны иметь возможность следить за ходом игры
  prerequisites: |
   Пользователи авторизованы на сайте, Пользователь 1 на главной странцие в "Лобби" выбираем любую игру и нажимаем "Сражайся"
  test-data: | 
    no data
  steps:
    - Пользователь 2 на главной странице, в разделе "Лобби" Нажимает "Show" на ранее созданной Пользователем 1
      expected-result: |
    Игра упешно открывается и можно за ней наблюдать

- summary: |
    Проверка возможности просмотреть в записи завершенную игру
  requirement: |
    Завершенная игра должна быть доступна в записи
  prerequisites: |
    Авторзованы на сайте
  test-data: |
    no data
  steps:
    - На главной странице выбираем раздел "История"
    - В поле "чата" вводим любое сообщение
    - Нажимаем "Показать" на любой завершенной игре
  expected-result: |
    Выбранная нами игра откроется и будет доступна для просмотра в записи

- summary: |
    Проверка получения очков по итогам игры
  requirement: |
    Пользователи должны иметь возможность получать очки по итогам игры, на основе которых строиться рейтинг за неделю, месяц и за все время
  prerequisites: |
    Пользователи авторизованы на сайте, Пользователь 1 на главной странице создает игру с другим пользователем (параметры игры любые)
  test-data: |
    no data
  steps:
    - Пользователь 2 на главной странице в "Лобби" подключается в ранее созданной игре
    - Нажимает на белый флажок, чтобы сдаться
      expected-result: |
    Пользователь 2 получает уведомление о поражении, Пользователь 1 получает уведомление о победеи ему начисляются очки в поле "Score"















